
DROP DATABASE IF EXISTS momentastik; 

CREATE DATABASE momentastik;

USE momentastik;


CREATE TABLE Card(
id INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
title VARCHAR (10),
urlImage VARCHAR(50),
idFather INTEGER NULL
);


CREATE TABLE IF NOT EXISTS TypeUser (
 type ENUM ('Admin', 'Moderator', 'User','Town_hall') PRIMARY KEY NOT NULL DEFAULT 'User' 

);


CREATE TABLE IF NOT EXISTS User (
id INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
name VARCHAR(30) NOT NULL,
email VARCHAR(30) NOT NULL,
userConfirmed TINYINT(1) NOT NULL DEFAULT 0,
password VARCHAR(30) NOT NULL,
accountEnable TINYINT(1) NOT NULL DEFAULT 1,
typeUser ENUM ('Admin', 'Moderator', 'User','Town_hall'),
FOREIGN KEY(typeUser) REFERENCES TypeUser(type)

);


CREATE TABLE IF NOT EXISTS Place (
id INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
name VARCHAR(30),
longi FLOAT(10,6),
lati FLOAT(10,6),
description VARCHAR(600) NULL
);


CREATE TABLE IF NOT EXISTS ScoreCommentPlace (
id INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
score TINYINT(5) NULL,
text TEXT NULL,
date DATETIME NOT NULL DEFAULT NOW(),
idUser INTEGER,
idPlace INTEGER,
FOREIGN KEY (idUser) REFERENCES User(id),
FOREIGN KEY (idPlace) REFERENCES Place(id)
);

CREATE TABLE IF NOT EXISTS FavouritePlace (
id INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
date DATETIME NOT NULL DEFAULT NOW(),
idUser INTEGER,
idPlace INTEGER,
FOREIGN KEY (idUser) REFERENCES User(id),
FOREIGN KEY (idPlace) REFERENCES Place(id)
);

CREATE TABLE IF NOT EXISTS ImagePlace (
id INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
urlImage VARCHAR(50) NOT NULL,
idPlace INTEGER,
FOREIGN KEY (idPlace) REFERENCES Place(id)
);


CREATE TABLE IF NOT EXISTS Event (
id INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
title VARCHAR(30),
subtitle VARCHAR(30),
description VARCHAR(600),
longi FLOAT(10,6),
lati FLOAT(10,6),
scoreGlobal FLOAT(2,1),
tlf INT(12),
email VARCHAR(30),
price INT(4),
maxUsers INT(3),
idPlace INTEGER,
idUser INTEGER,
FOREIGN KEY (idPlace) REFERENCES Place(id),
FOREIGN KEY (idUser) REFERENCES User(id)
);


CREATE TABLE IF NOT EXISTS ScoreCommentEvent (
id INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
score TINYINT(5) NULL,
text TEXT NULL,
idUser INTEGER,
idEvent INTEGER,
FOREIGN KEY (idUser) REFERENCES User(id),
FOREIGN KEY (idEvent) REFERENCES Event(id)
);
CREATE TABLE IF NOT EXISTS FavouriteEvent (
id INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
date DATETIME NOT NULL DEFAULT NOW(),
idUser INTEGER,
idEvent INTEGER,
FOREIGN KEY (idUser) REFERENCES User(id),
FOREIGN KEY (idEvent) REFERENCES Event(id)
);

CREATE TABLE IF NOT EXISTS ImageEvent (
id INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
urlImage VARCHAR(50) NOT NULL,
idEvent INTEGER,
FOREIGN KEY (idEvent) REFERENCES Event(id)
);



CREATE TABLE R_Card_User (
id INTEGER NOT NULL PRIMARY KEY  AUTO_INCREMENT,
idCard INTEGER ,
idUser INTEGER ,
FOREIGN KEY (idCard) REFERENCES Event(id),
FOREIGN KEY (idUser) REFERENCES User(id)
);

CREATE TABLE R_USER_EVENT_2 (
id INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
idEvent INTEGER,
idUser INTEGER,
FOREIGN KEY (idEvent) REFERENCES Event(id),
FOREIGN KEY (idUser) REFERENCES User(id)
);

CREATE TABLE R_CARD_PLACE (
id INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
idPlace INTEGER,
idCard INTEGER,
FOREIGN KEY (idPlace) REFERENCES Place(id),
FOREIGN KEY (idCard) REFERENCES Card(id)
);

CREATE TABLE R_CARD_EVENT (
id INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
idEvent INTEGER,
idCard INTEGER,
FOREIGN KEY (idEvent) REFERENCES Event(id),
FOREIGN KEY (idCard) REFERENCES Card(id)
);
































